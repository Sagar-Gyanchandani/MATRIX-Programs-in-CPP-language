#include<iostream>
using namespace std;

class Element
{
	public:
		int i;
		int j;
		int x;
};
class Sparse
{
	private:
		int m;
		int n;
		int num;
		Element *ele;
	public:
		Sparse(int m, int n, int num)
		{
			this->m = m;
			this->n = n;
			this->num = num;
			ele = new Element[this->num];
		}
		~Sparse()
		{
			delete [] ele;
		}
		void read()
		{
			cout<<"Enter row no, col no and its value"<<endl;
			for(int i=0; i<num; i++)
			{
				cin>>ele[i].i>>ele[i].j>>ele[i].x;
			}
		}
		void display()
		{
			int k=0;
			for(int i=0; i<m; i++)
			{
				for(int j=0; j<n; j++)
				{
					if(ele[k].i == i && ele[k].j == j)
						cout<<ele[k++].x<<" ";
					else
						cout<<"0 ";
				}
				cout<<endl;
			}
		}
};

int main()
{
	Sparse s1(5,5,5);
	s1.read();
	cout<<"\nSSparse Matrix:\n";
	s1.display();
	
	
	return 0;	
}
 
 
/* 
OUTPUT:
Enter row no, col no and its value
0 0 1
1 1 1
2 2 1
3 3 1
4 4 1

Sparse Matrix:
1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1
 
 */
 
